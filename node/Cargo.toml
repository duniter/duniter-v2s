[package]
authors.workspace = true
build = "build.rs"
description = "Crypto-currency software (based on Substrate framework) to operate Äž1 libre currency"
edition.workspace = true
homepage.workspace = true
license.workspace = true
name = "duniter"
repository.workspace = true
version = "0.8.0"
default-run = "duniter"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
bench = false
name = "duniter"
path = "src/main.rs"

[features]
default = ["distance-oracle", "gdev"]
gdev = ["gdev-runtime", "std"]
g1 = ["g1-runtime", "std"]
constant-fees = [
	"common-runtime/constant-fees",
	"g1-runtime/constant-fees",
	"gdev-runtime/constant-fees",
	"gtest-runtime/constant-fees",
]
gtest = ["gtest-runtime", "std"]
embed = []
native = []
runtime-benchmarks = [
	"common-runtime/runtime-benchmarks",
	"dc-distance?/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"g1-runtime/runtime-benchmarks",
	"gdev-runtime/runtime-benchmarks",
	"gtest-runtime/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"sc-client-db/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
  "runtime-benchmarks",
	"common-runtime/try-runtime",
	"dc-distance?/try-runtime",
	"distance-oracle?/try-runtime",
	"frame-system/try-runtime",
	"g1-runtime/try-runtime",
	"gdev-runtime/try-runtime",
	"gtest-runtime/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-treasury/try-runtime",
	"sp-distance/try-runtime",
	"sp-membership/try-runtime",
	"sp-runtime/try-runtime",
]
std = [
	"bs58/std",
	"common-runtime/std",
	"dc-distance/std",
	"distance-oracle?/std",
	"frame-benchmarking/std",
	"frame-system/std",
	"futures/std",
	"g1-runtime/std",
	"gdev-runtime/std",
	"gtest-runtime/std",
	"hex/std",
	"log/std",
	"num-format/std",
	"pallet-grandpa/std",
	"pallet-im-online/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-treasury/std",
	"sc-executor/std",
	"serde/std",
	"serde_json/std",
	"sp-api/std",
	"sp-authority-discovery/std",
	"sp-block-builder/std",
	"sp-consensus-babe/std",
	"sp-consensus-grandpa/std",
	"sp-core/std",
	"sp-distance/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-keystore/std",
	"sp-membership/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-storage/std",
	"sp-timestamp/std",
	"sp-transaction-pool/std",
	"sp-transaction-storage-proof/std",
	"sp-trie/std",
]
standalone = ["distance-oracle?/standalone"]

[dependencies]
async-io = { workspace = true }
bs58 = { workspace = true }
clap = { workspace = true, features = ["derive"] }
clap_complete = { workspace = true }
frame-benchmarking = { workspace = true }
frame-benchmarking-cli = { workspace = true }
frame-system = { workspace = true }
futures = { workspace = true, features = ["compat"] }
hex = { workspace = true }
jsonrpsee = { workspace = true, features = ["server"] }
log = { workspace = true }
memmap2 = { workspace = true }
num-format = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = { workspace = true }

# Local
common-runtime = { workspace = true }
g1-runtime = { workspace = true, optional = true }
gdev-runtime = { workspace = true, optional = true }
gtest-runtime = { workspace = true, optional = true }
distance-oracle = { workspace = true, optional = true }
dc-distance = { workspace = true, optional = true }

# Substrate
pallet-grandpa = { workspace = true, default-features = true }
pallet-im-online = { workspace = true, default-features = true }
pallet-transaction-payment = { workspace = true, default-features = true }
pallet-transaction-payment-rpc = { workspace = true, default-features = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true, default-features = true }
pallet-treasury = { workspace = true, default-features = true }
sc-basic-authorship = { workspace = true, default-features = true }
sc-chain-spec = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }
sc-client-db = { workspace = true, default-features = true }
sc-consensus = { workspace = true, default-features = true }
sc-rpc = { workspace = true, default-features = true }
sc-consensus-babe = { workspace = true, default-features = true }
sc-consensus-babe-rpc = { workspace = true, default-features = true }
sc-consensus-grandpa = { workspace = true, default-features = true }
sc-consensus-grandpa-rpc = { workspace = true, default-features = true }
sc-consensus-manual-seal = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-keystore = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-offchain = { workspace = true, default-features = true }
sc-rpc-api = { workspace = true, default-features = true }
sc-telemetry = { workspace = true, default-features = true }
sc-transaction-pool = { workspace = true, default-features = true }
sc-transaction-pool-api = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-authority-discovery = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-consensus = { workspace = true, default-features = true }
sp-consensus-babe = { workspace = true, default-features = true }
sp-consensus-grandpa = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-distance = { workspace = true, default-features = true }
sp-inherents = { workspace = true, default-features = true }
sp-io = { workspace = true, default-features = true }
sp-keyring = { workspace = true, default-features = true }
sp-keystore = { workspace = true, default-features = true }
sp-membership = { workspace = true, default-features = true }
sp-offchain = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-session = { workspace = true, default-features = true }
sp-storage = { workspace = true, default-features = true }
sp-timestamp = { workspace = true, default-features = true }
sp-transaction-pool = { workspace = true, default-features = true }
sp-transaction-storage-proof = { workspace = true, default-features = true }
substrate-frame-rpc-system = { workspace = true, default-features = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true, default-features = true}

# Dependencies for specific targets
[target.'cfg(any(target_arch="x86_64", target_arch="aarch64"))'.dependencies]
sc-cli = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = true }
sp-trie = { workspace = true, default-features = true }

[package.metadata.deb]
maintainer-scripts = "../resources/debian"
systemd-units = [ { unit-name = "duniter-mirror", enable = false },
                  { unit-name = "duniter-smith", enable = false },
                  { unit-name = "distance-oracle", enable = false },
                  ]
assets = [ ["../resources/debian/env_file", "/etc/duniter/env_file", "0640"],
           ["../target/release/duniter", "/usr/bin/duniter2", "755"]]
